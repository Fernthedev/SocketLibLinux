name: Linux Meson Build

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  build:
    env:
      module_id: socket_lib
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - name: Download meson
        run: sudo pip3 install meson

      - name: Use Clang
        run: |
         sudo apt install -y clang
         export CC=clang
         export CXX=clang++
         echo "CC=clang" >> $GITHUB_ENV
         echo "CXX=clang++" >> $GITHUB_ENV

      - name: Get QPM
        if: steps.cache-qpm.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: cargo-build.yml
          name: linux-qpm
          path: QPM
          repo: QuestPackageManager/QPM.CLI

      - name: QPM Collapse
        run: |
          chmod +x ./QPM/qpm
          ./QPM/qpm collapse

      - name: QPM Dependencies Cache
        id: cache-qpm-deps
        uses: actions/cache@v2
        env:
          cache-name: cache-qpm-deps
        with:
          path: /home/runner/.local/share/qpm/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('qpm.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: QPM Restore
        run: |
          chmod +x ./QPM/qpm
          ./QPM/qpm dependency add fmt
          ./QPM/qpm dependency remove paper
          ./QPM/qpm restore


      - uses: BSFishy/meson-build@v1.0.1
        with:
          action: build

      - name: Upload library file
        uses: actions/upload-artifact@v2
        with:
          name: libsocket_lib.so
          path: ./build/libsocket_lib.so
          if-no-files-found: error
      - name: Upload executable tests
        uses: actions/upload-artifact@v2
        with:
          name: SocketLibMain
          path: ./build/SocketLibMain
          if-no-files-found: error
